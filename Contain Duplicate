# LeefCode-series

Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array 
such that nums[i] == nums[j] and abs(i - j) <= k.

Example 1:
Input: nums = [1,2,3,1], k = 3
Output: true

Example 2:
Input: nums = [1,0,1,1], k = 1
Output: true

Example 3:
Input: nums = [1,2,3,1,2,3], k = 2
Output: false

Code  :
1St Approach 
class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        for(int i=0;i<nums.length-1;i++){
            for(int j=i+1,m=0;j<nums.length && m<k;j++,m++){
                if(nums[i]==nums[j]){
                    return true;
                }
            }
        }
        return false;
    }
}

--------------------------------------
2 Approach
public class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 1; i++) {
            if (nums[i] == nums[i + 1] && Math.abs(i - (i + 1)) <= k) {
                return true;
            }
        }
        return false;
    }
}

