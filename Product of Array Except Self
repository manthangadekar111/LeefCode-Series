# LeefCode-series

Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].
The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
You must write an algorithm that runs in O(n) time and without using the division operation.
Example 1:
Input: nums = [1,2,3,4]
Output: [24,12,8,6]

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        int[] leftside = new int[n];
        int []rightside = new int[n];
        int []finalArray = new int[n];
        
        leftside[0] = nums[0];
        for(int i=1 ; i<n;i++){
            leftside[i] = leftside[i-1] * nums[i];
        }

        rightside[n-1] = nums[n-1];
        for(int i = n-2 ;i >=0;i--){
            rightside[i] = rightside[i+1] * nums[i];
        }

        finalArray[0] = rightside[1];
        finalArray[n-1] = leftside[n-2];

        for(int i=1 ; i<n-1;i++){
            finalArray[i] = leftside[i-1] * rightside[i+1];
        }
        return finalArray;
    }
}
