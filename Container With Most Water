# LeefCode-
You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.
Notice that you may not slant the container.


Input: height = [1,8,6,2,5,4,8,3,7]
Output: 49
Explanation: The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. 
In this case, the max area of water (blue section) the container can contain is 49.
class Solution {
    public int maxArea(int[] height) {
        int l = 0;
        int r = height.length-1;
        int max=0;
        while(l<r){
            int lh = height[l];
            int rh = height[r];
            int min_height = Math.min(lh , rh);
            max = Math.max(max , min_height * (r-l));
            if(lh < rh){
                l++;
            }else{
                r--;
            }
        }
        return max;
        
    }
}
