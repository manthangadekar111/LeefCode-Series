# LeefCode-series
Given an integer array nums, find a subarray that has the largest product, and return the product.
The test cases are generated so that the answer will fit in a 32-bit integer.
Example 1:
Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.

Example 2:
Input: nums = [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.


class Solution {
    public int maxProduct(int[] nums) {
        int n = nums.length;
        int start = 1  , end = 1;
        int max = Integer.MIN_VALUE;
        for(int i=0 ; i<n;i++){
            start = start * nums[i];
            end = end * nums[n -i -1];
            max = Math.max(max, Math.max(start, end));

            if(start == 0) start = 1;
            if(end == 0) end = 1;
        }
        return max;
    }
}
